plugins {
    id 'com.android.application'
    id 'com.ydq.android.gradle.native-aar.import' // must go after android gradle plugin
    id 'com.ydq.android.gradle.native-aar.export' // must go after android gradle plugin
}

android {
    namespace 'cppfw.github.io.rasterimage'
    compileSdk 33

    defaultConfig {
        applicationId "cppfw.github.io.rasterimage"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                targets "<library-name>"
            }
        }
    }

    nativeBundleExport {
        headerDir = "${project.projectDir}/../../src/"
        bundleStatic = true
        includeHeaderFilter.add("**/*.hpp")
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt" // Provides a relative path to your CMake build script.
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    maven {
        url 'http://gagis.hopto.org/nexus/repository/android/'
        allowInsecureProtocol = true
    }
}
dependencies {
    implementation 'io.github.cppfw:utki:+'
    implementation 'io.github.cppfw:papki:+'
}

// copy and rename release AAR to unified name
task copy_aar(type: Copy) {
    from file("build/outputs/aar/")
    into file("../")
    include("*-static-release.aar")
    rename { String fileName ->
        fileName.replace("static-release.aar", "\$(version).aar.in")
    }
}

afterEvaluate {
    copy_aar.dependsOn(assembleRelease) // TODO: is this needed?
    copy_aar.dependsOn(bundleStaticLibRelease)
}
